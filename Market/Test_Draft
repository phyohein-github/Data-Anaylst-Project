{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[],"mount_file_id":"1hbt_NaFbTNjVAUDEJh9EnQgthsWN5qrB","authorship_tag":"ABX9TyPE0bTZYOf5fW48unQnYN58"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"markdown","source":["#Test1"],"metadata":{"id":"OCzTsGyY2uq8"}},{"cell_type":"code","execution_count":null,"metadata":{"id":"Ap3a1hXRwKiq"},"outputs":[],"source":["import os \n","import pandas as pd\n","import sqlite3 as db\n","from time import sleep\n","import numpy as np\n","\n","conn = db.connect(\"/content/drive/MyDrive/Market/Market.db\")\n","cursor = conn.cursor()\n","conn.commit()"]},{"cell_type":"code","source":["query = \"SELECT * FROM asia_import_721070_quant\"\n","data = pd.read_sql_query(query, conn)"],"metadata":{"id":"pCGvTlNVxctV"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["data.head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":334},"id":"Cwy1Mah1ynQx","executionInfo":{"status":"ok","timestamp":1664611641731,"user_tz":-390,"elapsed":363,"user":{"displayName":"Phyo Hein","userId":"05488284707558741549"}},"outputId":"25a85eeb-7fb2-49c0-a789-e6b62a2e59a2"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["                    #   2009-11    2009-12    2010-01    2010-02    2010-03  \\\n","0    Asia Aggregation     0.000      0.000      0.000      0.000      0.000   \n","1  Korea, Republic of  4864.964   5094.905   3749.123   1960.459   5568.750   \n","2           Indonesia  8184.208  10706.313   7391.156   5657.894   6586.777   \n","3               India  3061.631   2973.885   2035.414   3692.462   4892.583   \n","4            Thailand  9480.977   9125.945  11869.978  11420.363  11003.664   \n","\n","     2010-04    2010-05    2010-06    2010-07  ...    2021-10    2021-11  \\\n","0      0.000      0.000      0.000      0.000  ...      0.000      0.000   \n","1  10330.767   8014.489   6287.928   7731.010  ...  48943.409  30042.972   \n","2   8260.497   6597.437   4073.924   7451.421  ...  17975.360  27285.791   \n","3   8244.244  11702.156   4949.781   7146.909  ...      0.000      0.000   \n","4  12942.847  11936.783  13164.438  15569.447  ...  24399.530  18633.549   \n","\n","     2021-12    2022-01    2022-02    2022-03    2022-04    2022-05  \\\n","0      0.000      0.000      0.000      0.000      0.000      0.000   \n","1  26176.778  36648.561  17275.878  48018.619  26236.900  50814.306   \n","2  26266.520  28764.318  19972.646  18181.041  13726.028  17303.157   \n","3      0.000      0.000      0.000      0.000      0.000      0.000   \n","4  24189.137  23085.515  20582.142  49419.211  47695.728  31959.196   \n","\n","     2022-06    2022-07  \n","0      0.000      0.000  \n","1  58852.626  49991.157  \n","2  22969.150  27575.078  \n","3      0.000      0.000  \n","4  25314.976  41777.619  \n","\n","[5 rows x 154 columns]"],"text/html":["\n","  <div id=\"df-631419f5-32f3-443c-bdf8-d177803058cb\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>#</th>\n","      <th>2009-11</th>\n","      <th>2009-12</th>\n","      <th>2010-01</th>\n","      <th>2010-02</th>\n","      <th>2010-03</th>\n","      <th>2010-04</th>\n","      <th>2010-05</th>\n","      <th>2010-06</th>\n","      <th>2010-07</th>\n","      <th>...</th>\n","      <th>2021-10</th>\n","      <th>2021-11</th>\n","      <th>2021-12</th>\n","      <th>2022-01</th>\n","      <th>2022-02</th>\n","      <th>2022-03</th>\n","      <th>2022-04</th>\n","      <th>2022-05</th>\n","      <th>2022-06</th>\n","      <th>2022-07</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>Asia Aggregation</td>\n","      <td>0.000</td>\n","      <td>0.000</td>\n","      <td>0.000</td>\n","      <td>0.000</td>\n","      <td>0.000</td>\n","      <td>0.000</td>\n","      <td>0.000</td>\n","      <td>0.000</td>\n","      <td>0.000</td>\n","      <td>...</td>\n","      <td>0.000</td>\n","      <td>0.000</td>\n","      <td>0.000</td>\n","      <td>0.000</td>\n","      <td>0.000</td>\n","      <td>0.000</td>\n","      <td>0.000</td>\n","      <td>0.000</td>\n","      <td>0.000</td>\n","      <td>0.000</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>Korea, Republic of</td>\n","      <td>4864.964</td>\n","      <td>5094.905</td>\n","      <td>3749.123</td>\n","      <td>1960.459</td>\n","      <td>5568.750</td>\n","      <td>10330.767</td>\n","      <td>8014.489</td>\n","      <td>6287.928</td>\n","      <td>7731.010</td>\n","      <td>...</td>\n","      <td>48943.409</td>\n","      <td>30042.972</td>\n","      <td>26176.778</td>\n","      <td>36648.561</td>\n","      <td>17275.878</td>\n","      <td>48018.619</td>\n","      <td>26236.900</td>\n","      <td>50814.306</td>\n","      <td>58852.626</td>\n","      <td>49991.157</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>Indonesia</td>\n","      <td>8184.208</td>\n","      <td>10706.313</td>\n","      <td>7391.156</td>\n","      <td>5657.894</td>\n","      <td>6586.777</td>\n","      <td>8260.497</td>\n","      <td>6597.437</td>\n","      <td>4073.924</td>\n","      <td>7451.421</td>\n","      <td>...</td>\n","      <td>17975.360</td>\n","      <td>27285.791</td>\n","      <td>26266.520</td>\n","      <td>28764.318</td>\n","      <td>19972.646</td>\n","      <td>18181.041</td>\n","      <td>13726.028</td>\n","      <td>17303.157</td>\n","      <td>22969.150</td>\n","      <td>27575.078</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>India</td>\n","      <td>3061.631</td>\n","      <td>2973.885</td>\n","      <td>2035.414</td>\n","      <td>3692.462</td>\n","      <td>4892.583</td>\n","      <td>8244.244</td>\n","      <td>11702.156</td>\n","      <td>4949.781</td>\n","      <td>7146.909</td>\n","      <td>...</td>\n","      <td>0.000</td>\n","      <td>0.000</td>\n","      <td>0.000</td>\n","      <td>0.000</td>\n","      <td>0.000</td>\n","      <td>0.000</td>\n","      <td>0.000</td>\n","      <td>0.000</td>\n","      <td>0.000</td>\n","      <td>0.000</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>Thailand</td>\n","      <td>9480.977</td>\n","      <td>9125.945</td>\n","      <td>11869.978</td>\n","      <td>11420.363</td>\n","      <td>11003.664</td>\n","      <td>12942.847</td>\n","      <td>11936.783</td>\n","      <td>13164.438</td>\n","      <td>15569.447</td>\n","      <td>...</td>\n","      <td>24399.530</td>\n","      <td>18633.549</td>\n","      <td>24189.137</td>\n","      <td>23085.515</td>\n","      <td>20582.142</td>\n","      <td>49419.211</td>\n","      <td>47695.728</td>\n","      <td>31959.196</td>\n","      <td>25314.976</td>\n","      <td>41777.619</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>5 rows Ã— 154 columns</p>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-631419f5-32f3-443c-bdf8-d177803058cb')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-631419f5-32f3-443c-bdf8-d177803058cb button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-631419f5-32f3-443c-bdf8-d177803058cb');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":4}]},{"cell_type":"code","source":["\n","for row_no in range(data.shape[0]):\n","    for col_no in range(2, data.shape[1] , 2):\n","        \n","        if (\"kilo\" in str(data.iloc[row_no][col_no]).lower()) and (data.iloc[row_no][col_no].lower() != np.nan) : \n","            data.iloc[row_no][col_no - 1] = float(data.iloc[row_no][col_no -1])/ 1000\n","               \n","       \n","        "],"metadata":{"id":"1Okl0ozj_IEb"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["data.iloc[107][6]"],"metadata":{"id":"C2QnOrYa7gYe"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["for i, col in enumerate(data.columns):\n","    if data.iloc[1:2][i][1] == \"Unit\":\n","        data = data.drop(columns = [col])\n","\n","data.columns = data.iloc[0][:]\n","data = data.iloc[2:][:]\n","data.reset_index(drop = True, inplace = True)"],"metadata":{"id":"RYs9Bv-byoT9"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["data.head()"],"metadata":{"id":"N9BOofrGzF2g"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["data[data[\"Importers\"].str.contains(\"Australia\")]"],"metadata":{"id":"jIjgRc9N0yAB"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["data.sum(axis = 0)"],"metadata":{"id":"HNNm3Ol5EWD9","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1664611652712,"user_tz":-390,"elapsed":5,"user":{"displayName":"Phyo Hein","userId":"05488284707558741549"}},"outputId":"25f29703-1bfd-4de7-c5c0-3ca26b9fbdb3"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["#          Asia AggregationKorea, Republic ofIndonesiaInd...\n","2009-11                                            62930.147\n","2009-12                                            71919.733\n","2010-01                                             69366.23\n","2010-02                                            65960.295\n","                                 ...                        \n","2022-03                                           142267.635\n","2022-04                                            104777.93\n","2022-05                                           117610.801\n","2022-06                                           124453.599\n","2022-07                                           136985.901\n","Length: 154, dtype: object"]},"metadata":{},"execution_count":5}]},{"cell_type":"code","source":["df = pd.DataFrame()\n","df[\"Import\"] = data.sum(axis = 0)[1:]"],"metadata":{"id":"Z88AgjYrlg95"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["df"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":423},"id":"_1Fc9m8_l_-L","executionInfo":{"status":"ok","timestamp":1664611798953,"user_tz":-390,"elapsed":342,"user":{"displayName":"Phyo Hein","userId":"05488284707558741549"}},"outputId":"22400529-c669-461a-8d11-12411d0d080c"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["             Import\n","2009-11   62930.147\n","2009-12   71919.733\n","2010-01    69366.23\n","2010-02   65960.295\n","2010-03   84173.818\n","...             ...\n","2022-03  142267.635\n","2022-04   104777.93\n","2022-05  117610.801\n","2022-06  124453.599\n","2022-07  136985.901\n","\n","[153 rows x 1 columns]"],"text/html":["\n","  <div id=\"df-794896e0-7c19-477b-a9df-43ddf46ebbd2\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Import</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>2009-11</th>\n","      <td>62930.147</td>\n","    </tr>\n","    <tr>\n","      <th>2009-12</th>\n","      <td>71919.733</td>\n","    </tr>\n","    <tr>\n","      <th>2010-01</th>\n","      <td>69366.23</td>\n","    </tr>\n","    <tr>\n","      <th>2010-02</th>\n","      <td>65960.295</td>\n","    </tr>\n","    <tr>\n","      <th>2010-03</th>\n","      <td>84173.818</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>2022-03</th>\n","      <td>142267.635</td>\n","    </tr>\n","    <tr>\n","      <th>2022-04</th>\n","      <td>104777.93</td>\n","    </tr>\n","    <tr>\n","      <th>2022-05</th>\n","      <td>117610.801</td>\n","    </tr>\n","    <tr>\n","      <th>2022-06</th>\n","      <td>124453.599</td>\n","    </tr>\n","    <tr>\n","      <th>2022-07</th>\n","      <td>136985.901</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>153 rows Ã— 1 columns</p>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-794896e0-7c19-477b-a9df-43ddf46ebbd2')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-794896e0-7c19-477b-a9df-43ddf46ebbd2 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-794896e0-7c19-477b-a9df-43ddf46ebbd2');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":9}]},{"cell_type":"code","source":["import pandas as pd"],"metadata":{"id":"hY3MBscWmAs8"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["data = pd.read_excel(\"/content/market_data_file (2).xlsx\", sheet_name = \"world_import_721070_quant\")\n","data = data.drop(columns = [\"Unnamed: 0\"])"],"metadata":{"id":"4gcOT65Y1rpQ"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["data.head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":386},"id":"MYr42MbW1xBP","executionInfo":{"status":"ok","timestamp":1664733414125,"user_tz":-390,"elapsed":10,"user":{"displayName":"Phyo Hein","userId":"05488284707558741549"}},"outputId":"bac143cc-a468-4fbd-bb5a-93b0d936b611"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["                          #    2009-11    2009-12    2010-01    2010-02  \\\n","0        Russian Federation      0.000      0.000  12541.356  37870.988   \n","1                    Poland  33457.000  23009.000  19490.000  33738.000   \n","2                   Germany  34948.000  31539.000  31289.000  28723.000   \n","3  United States of America  12207.063  16046.219  21558.092  17415.792   \n","4        Korea, Republic of   4864.964   5094.905   3749.123   1960.459   \n","\n","     2010-03    2010-04    2010-05     2010-06     2010-07  ...    2021-10  \\\n","0  42579.996  74636.944  74567.632  121020.056  102637.136  ...  27677.581   \n","1  33686.000  37557.000  42128.000   42705.000   51372.000  ...  80680.892   \n","2  36306.000  41052.000  34253.000   47704.000   34949.000  ...  50823.000   \n","3  28946.188  29767.702  21452.884   32655.136   12702.610  ...  56760.339   \n","4   5568.750  10330.767   8014.489    6287.928    7731.010  ...  48943.409   \n","\n","     2021-11    2021-12    2022-01    2022-02    2022-03    2022-04  \\\n","0  19363.567  19171.741  12412.030      0.000      0.000      0.000   \n","1  56561.094  54440.560  63447.210  71067.100  81520.425  97233.144   \n","2  50246.000  30277.000  40449.000  51056.000  56888.000  56449.000   \n","3  65800.199  60411.987  41877.971  50461.645  43812.412  48019.758   \n","4  30042.972  26176.778  36648.561  17275.878  48018.619  26236.900   \n","\n","     2022-05    2022-06    2022-07  \n","0      0.000      0.000      0.000  \n","1  72193.163  72127.959      0.000  \n","2  65044.000  58663.000  41420.000  \n","3  54134.984  59820.664  65832.725  \n","4  50814.306  58852.626  49991.157  \n","\n","[5 rows x 154 columns]"],"text/html":["\n","  <div id=\"df-2355d2fb-148f-4661-b514-2ea64b8f2cb0\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>#</th>\n","      <th>2009-11</th>\n","      <th>2009-12</th>\n","      <th>2010-01</th>\n","      <th>2010-02</th>\n","      <th>2010-03</th>\n","      <th>2010-04</th>\n","      <th>2010-05</th>\n","      <th>2010-06</th>\n","      <th>2010-07</th>\n","      <th>...</th>\n","      <th>2021-10</th>\n","      <th>2021-11</th>\n","      <th>2021-12</th>\n","      <th>2022-01</th>\n","      <th>2022-02</th>\n","      <th>2022-03</th>\n","      <th>2022-04</th>\n","      <th>2022-05</th>\n","      <th>2022-06</th>\n","      <th>2022-07</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>Russian Federation</td>\n","      <td>0.000</td>\n","      <td>0.000</td>\n","      <td>12541.356</td>\n","      <td>37870.988</td>\n","      <td>42579.996</td>\n","      <td>74636.944</td>\n","      <td>74567.632</td>\n","      <td>121020.056</td>\n","      <td>102637.136</td>\n","      <td>...</td>\n","      <td>27677.581</td>\n","      <td>19363.567</td>\n","      <td>19171.741</td>\n","      <td>12412.030</td>\n","      <td>0.000</td>\n","      <td>0.000</td>\n","      <td>0.000</td>\n","      <td>0.000</td>\n","      <td>0.000</td>\n","      <td>0.000</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>Poland</td>\n","      <td>33457.000</td>\n","      <td>23009.000</td>\n","      <td>19490.000</td>\n","      <td>33738.000</td>\n","      <td>33686.000</td>\n","      <td>37557.000</td>\n","      <td>42128.000</td>\n","      <td>42705.000</td>\n","      <td>51372.000</td>\n","      <td>...</td>\n","      <td>80680.892</td>\n","      <td>56561.094</td>\n","      <td>54440.560</td>\n","      <td>63447.210</td>\n","      <td>71067.100</td>\n","      <td>81520.425</td>\n","      <td>97233.144</td>\n","      <td>72193.163</td>\n","      <td>72127.959</td>\n","      <td>0.000</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>Germany</td>\n","      <td>34948.000</td>\n","      <td>31539.000</td>\n","      <td>31289.000</td>\n","      <td>28723.000</td>\n","      <td>36306.000</td>\n","      <td>41052.000</td>\n","      <td>34253.000</td>\n","      <td>47704.000</td>\n","      <td>34949.000</td>\n","      <td>...</td>\n","      <td>50823.000</td>\n","      <td>50246.000</td>\n","      <td>30277.000</td>\n","      <td>40449.000</td>\n","      <td>51056.000</td>\n","      <td>56888.000</td>\n","      <td>56449.000</td>\n","      <td>65044.000</td>\n","      <td>58663.000</td>\n","      <td>41420.000</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>United States of America</td>\n","      <td>12207.063</td>\n","      <td>16046.219</td>\n","      <td>21558.092</td>\n","      <td>17415.792</td>\n","      <td>28946.188</td>\n","      <td>29767.702</td>\n","      <td>21452.884</td>\n","      <td>32655.136</td>\n","      <td>12702.610</td>\n","      <td>...</td>\n","      <td>56760.339</td>\n","      <td>65800.199</td>\n","      <td>60411.987</td>\n","      <td>41877.971</td>\n","      <td>50461.645</td>\n","      <td>43812.412</td>\n","      <td>48019.758</td>\n","      <td>54134.984</td>\n","      <td>59820.664</td>\n","      <td>65832.725</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>Korea, Republic of</td>\n","      <td>4864.964</td>\n","      <td>5094.905</td>\n","      <td>3749.123</td>\n","      <td>1960.459</td>\n","      <td>5568.750</td>\n","      <td>10330.767</td>\n","      <td>8014.489</td>\n","      <td>6287.928</td>\n","      <td>7731.010</td>\n","      <td>...</td>\n","      <td>48943.409</td>\n","      <td>30042.972</td>\n","      <td>26176.778</td>\n","      <td>36648.561</td>\n","      <td>17275.878</td>\n","      <td>48018.619</td>\n","      <td>26236.900</td>\n","      <td>50814.306</td>\n","      <td>58852.626</td>\n","      <td>49991.157</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>5 rows Ã— 154 columns</p>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-2355d2fb-148f-4661-b514-2ea64b8f2cb0')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-2355d2fb-148f-4661-b514-2ea64b8f2cb0 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-2355d2fb-148f-4661-b514-2ea64b8f2cb0');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":7}]},{"cell_type":"code","source":["data[data[\"#\"].str.contains(\"Mo\")]"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":254},"id":"MOUr41Vd8D-3","executionInfo":{"status":"ok","timestamp":1664735024531,"user_tz":-390,"elapsed":591,"user":{"displayName":"Phyo Hein","userId":"05488284707558741549"}},"outputId":"c443804a-e86d-43f7-80d1-48565cec1086"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["              #  2009-11  2009-12  2010-01  2010-02  2010-03  2010-04  \\\n","39      Morocco  121.218  314.822  254.048  266.343  389.409  357.054   \n","62   Mozambique    0.000    0.000    0.000    0.000    0.000    0.000   \n","100    Mongolia    0.000    0.000    0.000    0.000    0.000    0.000   \n","\n","     2010-05  2010-06  2010-07  ...   2021-10  2021-11  2021-12  2022-01  \\\n","39   258.075   429.89  438.155  ...  1061.412  894.291  923.841    0.000   \n","62     0.000     0.00    0.000  ...   881.691  109.364  682.786   25.526   \n","100   40.150     0.00    0.000  ...     0.000    0.000    0.000    0.000   \n","\n","     2022-02  2022-03  2022-04  2022-05  2022-06  2022-07  \n","39     0.000    0.000      0.0      0.0      0.0      0.0  \n","62   386.114  292.288      0.0      0.0      0.0      0.0  \n","100    0.000    0.000      0.0      0.0      0.0      0.0  \n","\n","[3 rows x 154 columns]"],"text/html":["\n","  <div id=\"df-97b11ea9-10bc-4ab6-b6b8-ae881331accb\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>#</th>\n","      <th>2009-11</th>\n","      <th>2009-12</th>\n","      <th>2010-01</th>\n","      <th>2010-02</th>\n","      <th>2010-03</th>\n","      <th>2010-04</th>\n","      <th>2010-05</th>\n","      <th>2010-06</th>\n","      <th>2010-07</th>\n","      <th>...</th>\n","      <th>2021-10</th>\n","      <th>2021-11</th>\n","      <th>2021-12</th>\n","      <th>2022-01</th>\n","      <th>2022-02</th>\n","      <th>2022-03</th>\n","      <th>2022-04</th>\n","      <th>2022-05</th>\n","      <th>2022-06</th>\n","      <th>2022-07</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>39</th>\n","      <td>Morocco</td>\n","      <td>121.218</td>\n","      <td>314.822</td>\n","      <td>254.048</td>\n","      <td>266.343</td>\n","      <td>389.409</td>\n","      <td>357.054</td>\n","      <td>258.075</td>\n","      <td>429.89</td>\n","      <td>438.155</td>\n","      <td>...</td>\n","      <td>1061.412</td>\n","      <td>894.291</td>\n","      <td>923.841</td>\n","      <td>0.000</td>\n","      <td>0.000</td>\n","      <td>0.000</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","    </tr>\n","    <tr>\n","      <th>62</th>\n","      <td>Mozambique</td>\n","      <td>0.000</td>\n","      <td>0.000</td>\n","      <td>0.000</td>\n","      <td>0.000</td>\n","      <td>0.000</td>\n","      <td>0.000</td>\n","      <td>0.000</td>\n","      <td>0.00</td>\n","      <td>0.000</td>\n","      <td>...</td>\n","      <td>881.691</td>\n","      <td>109.364</td>\n","      <td>682.786</td>\n","      <td>25.526</td>\n","      <td>386.114</td>\n","      <td>292.288</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","    </tr>\n","    <tr>\n","      <th>100</th>\n","      <td>Mongolia</td>\n","      <td>0.000</td>\n","      <td>0.000</td>\n","      <td>0.000</td>\n","      <td>0.000</td>\n","      <td>0.000</td>\n","      <td>0.000</td>\n","      <td>40.150</td>\n","      <td>0.00</td>\n","      <td>0.000</td>\n","      <td>...</td>\n","      <td>0.000</td>\n","      <td>0.000</td>\n","      <td>0.000</td>\n","      <td>0.000</td>\n","      <td>0.000</td>\n","      <td>0.000</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>3 rows Ã— 154 columns</p>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-97b11ea9-10bc-4ab6-b6b8-ae881331accb')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-97b11ea9-10bc-4ab6-b6b8-ae881331accb button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-97b11ea9-10bc-4ab6-b6b8-ae881331accb');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":75}]},{"cell_type":"code","source":["data1 =  data.melt()"],"metadata":{"id":"q64DtId81yOe"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["data1 = data1[data1[\"variable\"] != \"#\"]\n","data1[\"value\"] = data1[\"value\"].astype(float)"],"metadata":{"id":"K9TA30At2CGv"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["data1.head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":206},"id":"o2sJJJI52Msb","executionInfo":{"status":"ok","timestamp":1664733556427,"user_tz":-390,"elapsed":345,"user":{"displayName":"Phyo Hein","userId":"05488284707558741549"}},"outputId":"6430063a-4205-4af2-9fbf-baede6f4c4ce"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["    variable      value\n","145  2009-11      0.000\n","146  2009-11  33457.000\n","147  2009-11  34948.000\n","148  2009-11  12207.063\n","149  2009-11   4864.964"],"text/html":["\n","  <div id=\"df-4a7f52ba-a7ee-460a-81f7-19369ea2a015\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>variable</th>\n","      <th>value</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>145</th>\n","      <td>2009-11</td>\n","      <td>0.000</td>\n","    </tr>\n","    <tr>\n","      <th>146</th>\n","      <td>2009-11</td>\n","      <td>33457.000</td>\n","    </tr>\n","    <tr>\n","      <th>147</th>\n","      <td>2009-11</td>\n","      <td>34948.000</td>\n","    </tr>\n","    <tr>\n","      <th>148</th>\n","      <td>2009-11</td>\n","      <td>12207.063</td>\n","    </tr>\n","    <tr>\n","      <th>149</th>\n","      <td>2009-11</td>\n","      <td>4864.964</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-4a7f52ba-a7ee-460a-81f7-19369ea2a015')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-4a7f52ba-a7ee-460a-81f7-19369ea2a015 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-4a7f52ba-a7ee-460a-81f7-19369ea2a015');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":17}]},{"cell_type":"code","source":["import seaborn as sns\n","\n","for col in data.columns[1:3]:\n","    x = data[col].astype(float)\n","    sns.boxplot(x)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":368},"id":"yW_X4hPy2atJ","executionInfo":{"status":"ok","timestamp":1664734565198,"user_tz":-390,"elapsed":366,"user":{"displayName":"Phyo Hein","userId":"05488284707558741549"}},"outputId":"d78f8a9f-0af9-41fc-e0f6-9e6495aee560"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.7/dist-packages/seaborn/_decorators.py:43: FutureWarning: Pass the following variable as a keyword arg: x. From version 0.12, the only valid positional argument will be `data`, and passing other arguments without an explicit keyword will result in an error or misinterpretation.\n","  FutureWarning\n","/usr/local/lib/python3.7/dist-packages/seaborn/_decorators.py:43: FutureWarning: Pass the following variable as a keyword arg: x. From version 0.12, the only valid positional argument will be `data`, and passing other arguments without an explicit keyword will result in an error or misinterpretation.\n","  FutureWarning\n"]},{"output_type":"display_data","data":{"text/plain":["<Figure size 432x288 with 1 Axes>"],"image/png":"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\n"},"metadata":{"needs_background":"light"}}]},{"cell_type":"code","source":["import numpy as np \n","values_over_99 = []\n","for num in data1[\"value\"]:\n","    if (num > np.percentile(data1[\"value\"], 99)):\n","        values_over_99.append(num)\n"],"metadata":{"id":"Rb783M362j-z"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["sns.lineplot(x = range(len(values_over_99)), y = sorted(values_over_99))"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":293},"id":"emU09XQF2_Ol","executionInfo":{"status":"ok","timestamp":1664733978628,"user_tz":-390,"elapsed":395,"user":{"displayName":"Phyo Hein","userId":"05488284707558741549"}},"outputId":"f65e5aff-5d61-4936-f542-0f7abedb9521"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["<matplotlib.axes._subplots.AxesSubplot at 0x7f5cead06250>"]},"metadata":{},"execution_count":39},{"output_type":"display_data","data":{"text/plain":["<Figure size 432x288 with 1 Axes>"],"image/png":"\n"},"metadata":{"needs_background":"light"}}]},{"cell_type":"code","source":["np.percentile(data1[\"value\"], 99.9)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"USRdzslx300z","executionInfo":{"status":"ok","timestamp":1664734717184,"user_tz":-390,"elapsed":556,"user":{"displayName":"Phyo Hein","userId":"05488284707558741549"}},"outputId":"2b052630-0f9c-4d30-ea26-20338f260eef"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["1165077.1976960108"]},"metadata":{},"execution_count":66}]},{"cell_type":"code","source":["round(np.percentile(data.iloc[:, 1].astype(float), 99.999_99999))"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"8eKKafU04YUD","executionInfo":{"status":"ok","timestamp":1664734925565,"user_tz":-390,"elapsed":533,"user":{"displayName":"Phyo Hein","userId":"05488284707558741549"}},"outputId":"6f5d8393-6dfa-4197-9137-fda83aa7b7da"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["34948"]},"metadata":{},"execution_count":73}]},{"cell_type":"code","source":["np.percentile(data.iloc[:, 1].astype(float), 100)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"mrHqOCxJ6sCV","executionInfo":{"status":"ok","timestamp":1664734915332,"user_tz":-390,"elapsed":463,"user":{"displayName":"Phyo Hein","userId":"05488284707558741549"}},"outputId":"985065a8-cfb9-43f1-d1c1-2cf6af16c440"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["34948.0"]},"metadata":{},"execution_count":72}]},{"cell_type":"code","source":["round(np.percentile(data.iloc[:, 8].astype(float), 99.999_99999))"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"_vnFoEMk7o41","executionInfo":{"status":"ok","timestamp":1664734952643,"user_tz":-390,"elapsed":6,"user":{"displayName":"Phyo Hein","userId":"05488284707558741549"}},"outputId":"d299a555-029c-4592-8891-2963f8d6e97b"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["121020"]},"metadata":{},"execution_count":74}]},{"cell_type":"code","source":["data2 = pd.read_html(\"/content/721070 world import quant (4).xls\")[-1]"],"metadata":{"id":"wweXaJv973m7"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["data2.head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":369},"id":"FJR3VDd28Zxn","executionInfo":{"status":"ok","timestamp":1664735097643,"user_tz":-390,"elapsed":354,"user":{"displayName":"Phyo Hein","userId":"05488284707558741549"}},"outputId":"24658827-1217-4f19-8f35-b82e55f7c685"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["                         0                  1          2                  3   \\\n","0                 Importers           2016-M03   2016-M03           2016-M04   \n","1                 Importers  Imported quantity       Unit  Imported quantity   \n","2                Mozambique             401242  Kilograms          130000000   \n","3                    Poland           60537996  Kilograms           62167551   \n","4  United States of America           24073021  Kilograms           23155395   \n","\n","          4                  5          6                  7          8   \\\n","0   2016-M04           2016-M05   2016-M05           2016-M06   2016-M06   \n","1       Unit  Imported quantity       Unit  Imported quantity       Unit   \n","2  Kilograms          507000000  Kilograms          669497958  Kilograms   \n","3  Kilograms           55070337  Kilograms           58908083  Kilograms   \n","4  Kilograms           33011972  Kilograms           43504694  Kilograms   \n","\n","                  9   ...                 31         32                 33  \\\n","0           2016-M07  ...           2017-M06   2017-M06           2017-M07   \n","1  Imported quantity  ...  Imported quantity       Unit  Imported quantity   \n","2          504230348  ...          184000000  Kilograms          190000000   \n","3           55656193  ...           69443598  Kilograms           59916007   \n","4           34683438  ...           50905031  Kilograms           38667144   \n","\n","          34                 35         36                 37         38  \\\n","0   2017-M07           2017-M08   2017-M08           2017-M09   2017-M09   \n","1       Unit  Imported quantity       Unit  Imported quantity       Unit   \n","2  Kilograms           53000000  Kilograms          599000000  Kilograms   \n","3  Kilograms           64645893  Kilograms           66811598  Kilograms   \n","4  Kilograms           41990215  Kilograms           28172988  Kilograms   \n","\n","                  39         40  \n","0           2017-M10   2017-M10  \n","1  Imported quantity       Unit  \n","2          186067792  Kilograms  \n","3           52306221  Kilograms  \n","4           46763182  Kilograms  \n","\n","[5 rows x 41 columns]"],"text/html":["\n","  <div id=\"df-278d5aa9-f13c-4372-8fa0-1128c300eac9\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>0</th>\n","      <th>1</th>\n","      <th>2</th>\n","      <th>3</th>\n","      <th>4</th>\n","      <th>5</th>\n","      <th>6</th>\n","      <th>7</th>\n","      <th>8</th>\n","      <th>9</th>\n","      <th>...</th>\n","      <th>31</th>\n","      <th>32</th>\n","      <th>33</th>\n","      <th>34</th>\n","      <th>35</th>\n","      <th>36</th>\n","      <th>37</th>\n","      <th>38</th>\n","      <th>39</th>\n","      <th>40</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>Importers</td>\n","      <td>2016-M03</td>\n","      <td>2016-M03</td>\n","      <td>2016-M04</td>\n","      <td>2016-M04</td>\n","      <td>2016-M05</td>\n","      <td>2016-M05</td>\n","      <td>2016-M06</td>\n","      <td>2016-M06</td>\n","      <td>2016-M07</td>\n","      <td>...</td>\n","      <td>2017-M06</td>\n","      <td>2017-M06</td>\n","      <td>2017-M07</td>\n","      <td>2017-M07</td>\n","      <td>2017-M08</td>\n","      <td>2017-M08</td>\n","      <td>2017-M09</td>\n","      <td>2017-M09</td>\n","      <td>2017-M10</td>\n","      <td>2017-M10</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>Importers</td>\n","      <td>Imported quantity</td>\n","      <td>Unit</td>\n","      <td>Imported quantity</td>\n","      <td>Unit</td>\n","      <td>Imported quantity</td>\n","      <td>Unit</td>\n","      <td>Imported quantity</td>\n","      <td>Unit</td>\n","      <td>Imported quantity</td>\n","      <td>...</td>\n","      <td>Imported quantity</td>\n","      <td>Unit</td>\n","      <td>Imported quantity</td>\n","      <td>Unit</td>\n","      <td>Imported quantity</td>\n","      <td>Unit</td>\n","      <td>Imported quantity</td>\n","      <td>Unit</td>\n","      <td>Imported quantity</td>\n","      <td>Unit</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>Mozambique</td>\n","      <td>401242</td>\n","      <td>Kilograms</td>\n","      <td>130000000</td>\n","      <td>Kilograms</td>\n","      <td>507000000</td>\n","      <td>Kilograms</td>\n","      <td>669497958</td>\n","      <td>Kilograms</td>\n","      <td>504230348</td>\n","      <td>...</td>\n","      <td>184000000</td>\n","      <td>Kilograms</td>\n","      <td>190000000</td>\n","      <td>Kilograms</td>\n","      <td>53000000</td>\n","      <td>Kilograms</td>\n","      <td>599000000</td>\n","      <td>Kilograms</td>\n","      <td>186067792</td>\n","      <td>Kilograms</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>Poland</td>\n","      <td>60537996</td>\n","      <td>Kilograms</td>\n","      <td>62167551</td>\n","      <td>Kilograms</td>\n","      <td>55070337</td>\n","      <td>Kilograms</td>\n","      <td>58908083</td>\n","      <td>Kilograms</td>\n","      <td>55656193</td>\n","      <td>...</td>\n","      <td>69443598</td>\n","      <td>Kilograms</td>\n","      <td>59916007</td>\n","      <td>Kilograms</td>\n","      <td>64645893</td>\n","      <td>Kilograms</td>\n","      <td>66811598</td>\n","      <td>Kilograms</td>\n","      <td>52306221</td>\n","      <td>Kilograms</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>United States of America</td>\n","      <td>24073021</td>\n","      <td>Kilograms</td>\n","      <td>23155395</td>\n","      <td>Kilograms</td>\n","      <td>33011972</td>\n","      <td>Kilograms</td>\n","      <td>43504694</td>\n","      <td>Kilograms</td>\n","      <td>34683438</td>\n","      <td>...</td>\n","      <td>50905031</td>\n","      <td>Kilograms</td>\n","      <td>38667144</td>\n","      <td>Kilograms</td>\n","      <td>41990215</td>\n","      <td>Kilograms</td>\n","      <td>28172988</td>\n","      <td>Kilograms</td>\n","      <td>46763182</td>\n","      <td>Kilograms</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>5 rows Ã— 41 columns</p>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-278d5aa9-f13c-4372-8fa0-1128c300eac9')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-278d5aa9-f13c-4372-8fa0-1128c300eac9 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-278d5aa9-f13c-4372-8fa0-1128c300eac9');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":77}]},{"cell_type":"code","source":["data2.columns = data2.iloc[1, :]\n","data2 = data2.iloc[2:, :]"],"metadata":{"id":"SLyJay6M8a4W"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["data2.head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":369},"id":"-D43WpCK8k3Y","executionInfo":{"status":"ok","timestamp":1664735143542,"user_tz":-390,"elapsed":471,"user":{"displayName":"Phyo Hein","userId":"05488284707558741549"}},"outputId":"63e0a635-7f79-429d-bc89-afd1aa70fa8c"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["1                 Importers Imported quantity       Unit Imported quantity  \\\n","2                Mozambique            401242  Kilograms         130000000   \n","3                    Poland          60537996  Kilograms          62167551   \n","4  United States of America          24073021  Kilograms          23155395   \n","5                     India          26539827  Kilograms          24297274   \n","6        Korea, Republic of          36197820  Kilograms          26957966   \n","\n","1       Unit Imported quantity       Unit Imported quantity       Unit  \\\n","2  Kilograms         507000000  Kilograms         669497958  Kilograms   \n","3  Kilograms          55070337  Kilograms          58908083  Kilograms   \n","4  Kilograms          33011972  Kilograms          43504694  Kilograms   \n","5  Kilograms          19449842  Kilograms          17570248  Kilograms   \n","6  Kilograms          29180740  Kilograms          43046972  Kilograms   \n","\n","1 Imported quantity  ... Imported quantity       Unit Imported quantity  \\\n","2         504230348  ...         184000000  Kilograms         190000000   \n","3          55656193  ...          69443598  Kilograms          59916007   \n","4          34683438  ...          50905031  Kilograms          38667144   \n","5           7502409  ...          44258479  Kilograms          33275589   \n","6          34658598  ...          25867200  Kilograms          27233909   \n","\n","1       Unit Imported quantity       Unit Imported quantity       Unit  \\\n","2  Kilograms          53000000  Kilograms         599000000  Kilograms   \n","3  Kilograms          64645893  Kilograms          66811598  Kilograms   \n","4  Kilograms          41990215  Kilograms          28172988  Kilograms   \n","5  Kilograms          47222505  Kilograms          44093673  Kilograms   \n","6  Kilograms          34884059  Kilograms          28613164  Kilograms   \n","\n","1 Imported quantity       Unit  \n","2         186067792  Kilograms  \n","3          52306221  Kilograms  \n","4          46763182  Kilograms  \n","5          42130381  Kilograms  \n","6          41778272  Kilograms  \n","\n","[5 rows x 41 columns]"],"text/html":["\n","  <div id=\"df-f921c606-458d-4b89-8818-9d6871d614ef\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th>1</th>\n","      <th>Importers</th>\n","      <th>Imported quantity</th>\n","      <th>Unit</th>\n","      <th>Imported quantity</th>\n","      <th>Unit</th>\n","      <th>Imported quantity</th>\n","      <th>Unit</th>\n","      <th>Imported quantity</th>\n","      <th>Unit</th>\n","      <th>Imported quantity</th>\n","      <th>...</th>\n","      <th>Imported quantity</th>\n","      <th>Unit</th>\n","      <th>Imported quantity</th>\n","      <th>Unit</th>\n","      <th>Imported quantity</th>\n","      <th>Unit</th>\n","      <th>Imported quantity</th>\n","      <th>Unit</th>\n","      <th>Imported quantity</th>\n","      <th>Unit</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>2</th>\n","      <td>Mozambique</td>\n","      <td>401242</td>\n","      <td>Kilograms</td>\n","      <td>130000000</td>\n","      <td>Kilograms</td>\n","      <td>507000000</td>\n","      <td>Kilograms</td>\n","      <td>669497958</td>\n","      <td>Kilograms</td>\n","      <td>504230348</td>\n","      <td>...</td>\n","      <td>184000000</td>\n","      <td>Kilograms</td>\n","      <td>190000000</td>\n","      <td>Kilograms</td>\n","      <td>53000000</td>\n","      <td>Kilograms</td>\n","      <td>599000000</td>\n","      <td>Kilograms</td>\n","      <td>186067792</td>\n","      <td>Kilograms</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>Poland</td>\n","      <td>60537996</td>\n","      <td>Kilograms</td>\n","      <td>62167551</td>\n","      <td>Kilograms</td>\n","      <td>55070337</td>\n","      <td>Kilograms</td>\n","      <td>58908083</td>\n","      <td>Kilograms</td>\n","      <td>55656193</td>\n","      <td>...</td>\n","      <td>69443598</td>\n","      <td>Kilograms</td>\n","      <td>59916007</td>\n","      <td>Kilograms</td>\n","      <td>64645893</td>\n","      <td>Kilograms</td>\n","      <td>66811598</td>\n","      <td>Kilograms</td>\n","      <td>52306221</td>\n","      <td>Kilograms</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>United States of America</td>\n","      <td>24073021</td>\n","      <td>Kilograms</td>\n","      <td>23155395</td>\n","      <td>Kilograms</td>\n","      <td>33011972</td>\n","      <td>Kilograms</td>\n","      <td>43504694</td>\n","      <td>Kilograms</td>\n","      <td>34683438</td>\n","      <td>...</td>\n","      <td>50905031</td>\n","      <td>Kilograms</td>\n","      <td>38667144</td>\n","      <td>Kilograms</td>\n","      <td>41990215</td>\n","      <td>Kilograms</td>\n","      <td>28172988</td>\n","      <td>Kilograms</td>\n","      <td>46763182</td>\n","      <td>Kilograms</td>\n","    </tr>\n","    <tr>\n","      <th>5</th>\n","      <td>India</td>\n","      <td>26539827</td>\n","      <td>Kilograms</td>\n","      <td>24297274</td>\n","      <td>Kilograms</td>\n","      <td>19449842</td>\n","      <td>Kilograms</td>\n","      <td>17570248</td>\n","      <td>Kilograms</td>\n","      <td>7502409</td>\n","      <td>...</td>\n","      <td>44258479</td>\n","      <td>Kilograms</td>\n","      <td>33275589</td>\n","      <td>Kilograms</td>\n","      <td>47222505</td>\n","      <td>Kilograms</td>\n","      <td>44093673</td>\n","      <td>Kilograms</td>\n","      <td>42130381</td>\n","      <td>Kilograms</td>\n","    </tr>\n","    <tr>\n","      <th>6</th>\n","      <td>Korea, Republic of</td>\n","      <td>36197820</td>\n","      <td>Kilograms</td>\n","      <td>26957966</td>\n","      <td>Kilograms</td>\n","      <td>29180740</td>\n","      <td>Kilograms</td>\n","      <td>43046972</td>\n","      <td>Kilograms</td>\n","      <td>34658598</td>\n","      <td>...</td>\n","      <td>25867200</td>\n","      <td>Kilograms</td>\n","      <td>27233909</td>\n","      <td>Kilograms</td>\n","      <td>34884059</td>\n","      <td>Kilograms</td>\n","      <td>28613164</td>\n","      <td>Kilograms</td>\n","      <td>41778272</td>\n","      <td>Kilograms</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>5 rows Ã— 41 columns</p>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-f921c606-458d-4b89-8818-9d6871d614ef')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-f921c606-458d-4b89-8818-9d6871d614ef button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-f921c606-458d-4b89-8818-9d6871d614ef');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":79}]},{"cell_type":"code","source":["data3 = data2.iloc[:, :4]\n","data3.columns = [\"Importers\", \"A\", \"B\" , \"C\"]\n","data3 = data3.drop(columns = [\"A\", \"B\"])\n","data3 = data3[data3[\"C\"]!=\"No Quantity\"]\n","data3[\"C\"] = data3[\"C\"].astype(float)\n","data3 = data3.dropna()"],"metadata":{"id":"A0WNW2eH8mBG"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["data3[\"C\"].max()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"2Q_CAJrK-e9P","executionInfo":{"status":"ok","timestamp":1664735894375,"user_tz":-390,"elapsed":559,"user":{"displayName":"Phyo Hein","userId":"05488284707558741549"}},"outputId":"d974ffa1-35e5-426c-eee9-1d2daf07bd4e"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["130000000.0"]},"metadata":{},"execution_count":105}]},{"cell_type":"code","source":["data3[\"C\"].nlargest(2).values[0]/data3[\"C\"].nlargest(2).values[1]"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"uJYbmJBk-79u","executionInfo":{"status":"ok","timestamp":1664735995461,"user_tz":-390,"elapsed":548,"user":{"displayName":"Phyo Hein","userId":"05488284707558741549"}},"outputId":"9c7f34a4-ec11-43b2-b36f-b449cce468bb"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["2.09112306836729"]},"metadata":{},"execution_count":112}]},{"cell_type":"code","source":["data.head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":386},"id":"DACGdqWk_f3k","executionInfo":{"status":"ok","timestamp":1664736615789,"user_tz":-390,"elapsed":371,"user":{"displayName":"Phyo Hein","userId":"05488284707558741549"}},"outputId":"95786107-ea56-4b36-c464-1e436b75bd81"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["                          #    2009-11    2009-12    2010-01    2010-02  \\\n","0        Russian Federation      0.000      0.000  12541.356  37870.988   \n","1                    Poland  33457.000  23009.000  19490.000  33738.000   \n","2                   Germany  34948.000  31539.000  31289.000  28723.000   \n","3  United States of America  12207.063  16046.219  21558.092  17415.792   \n","4        Korea, Republic of   4864.964   5094.905   3749.123   1960.459   \n","\n","     2010-03    2010-04    2010-05     2010-06     2010-07  ...    2021-10  \\\n","0  42579.996  74636.944  74567.632  121020.056  102637.136  ...  27677.581   \n","1  33686.000  37557.000  42128.000   42705.000   51372.000  ...  80680.892   \n","2  36306.000  41052.000  34253.000   47704.000   34949.000  ...  50823.000   \n","3  28946.188  29767.702  21452.884   32655.136   12702.610  ...  56760.339   \n","4   5568.750  10330.767   8014.489    6287.928    7731.010  ...  48943.409   \n","\n","     2021-11    2021-12    2022-01    2022-02    2022-03    2022-04  \\\n","0  19363.567  19171.741  12412.030      0.000      0.000      0.000   \n","1  56561.094  54440.560  63447.210  71067.100  81520.425  97233.144   \n","2  50246.000  30277.000  40449.000  51056.000  56888.000  56449.000   \n","3  65800.199  60411.987  41877.971  50461.645  43812.412  48019.758   \n","4  30042.972  26176.778  36648.561  17275.878  48018.619  26236.900   \n","\n","     2022-05    2022-06    2022-07  \n","0      0.000      0.000      0.000  \n","1  72193.163  72127.959      0.000  \n","2  65044.000  58663.000  41420.000  \n","3  54134.984  59820.664  65832.725  \n","4  50814.306  58852.626  49991.157  \n","\n","[5 rows x 154 columns]"],"text/html":["\n","  <div id=\"df-538ef991-0c30-40cc-bed4-c6fe62bfffde\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>#</th>\n","      <th>2009-11</th>\n","      <th>2009-12</th>\n","      <th>2010-01</th>\n","      <th>2010-02</th>\n","      <th>2010-03</th>\n","      <th>2010-04</th>\n","      <th>2010-05</th>\n","      <th>2010-06</th>\n","      <th>2010-07</th>\n","      <th>...</th>\n","      <th>2021-10</th>\n","      <th>2021-11</th>\n","      <th>2021-12</th>\n","      <th>2022-01</th>\n","      <th>2022-02</th>\n","      <th>2022-03</th>\n","      <th>2022-04</th>\n","      <th>2022-05</th>\n","      <th>2022-06</th>\n","      <th>2022-07</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>Russian Federation</td>\n","      <td>0.000</td>\n","      <td>0.000</td>\n","      <td>12541.356</td>\n","      <td>37870.988</td>\n","      <td>42579.996</td>\n","      <td>74636.944</td>\n","      <td>74567.632</td>\n","      <td>121020.056</td>\n","      <td>102637.136</td>\n","      <td>...</td>\n","      <td>27677.581</td>\n","      <td>19363.567</td>\n","      <td>19171.741</td>\n","      <td>12412.030</td>\n","      <td>0.000</td>\n","      <td>0.000</td>\n","      <td>0.000</td>\n","      <td>0.000</td>\n","      <td>0.000</td>\n","      <td>0.000</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>Poland</td>\n","      <td>33457.000</td>\n","      <td>23009.000</td>\n","      <td>19490.000</td>\n","      <td>33738.000</td>\n","      <td>33686.000</td>\n","      <td>37557.000</td>\n","      <td>42128.000</td>\n","      <td>42705.000</td>\n","      <td>51372.000</td>\n","      <td>...</td>\n","      <td>80680.892</td>\n","      <td>56561.094</td>\n","      <td>54440.560</td>\n","      <td>63447.210</td>\n","      <td>71067.100</td>\n","      <td>81520.425</td>\n","      <td>97233.144</td>\n","      <td>72193.163</td>\n","      <td>72127.959</td>\n","      <td>0.000</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>Germany</td>\n","      <td>34948.000</td>\n","      <td>31539.000</td>\n","      <td>31289.000</td>\n","      <td>28723.000</td>\n","      <td>36306.000</td>\n","      <td>41052.000</td>\n","      <td>34253.000</td>\n","      <td>47704.000</td>\n","      <td>34949.000</td>\n","      <td>...</td>\n","      <td>50823.000</td>\n","      <td>50246.000</td>\n","      <td>30277.000</td>\n","      <td>40449.000</td>\n","      <td>51056.000</td>\n","      <td>56888.000</td>\n","      <td>56449.000</td>\n","      <td>65044.000</td>\n","      <td>58663.000</td>\n","      <td>41420.000</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>United States of America</td>\n","      <td>12207.063</td>\n","      <td>16046.219</td>\n","      <td>21558.092</td>\n","      <td>17415.792</td>\n","      <td>28946.188</td>\n","      <td>29767.702</td>\n","      <td>21452.884</td>\n","      <td>32655.136</td>\n","      <td>12702.610</td>\n","      <td>...</td>\n","      <td>56760.339</td>\n","      <td>65800.199</td>\n","      <td>60411.987</td>\n","      <td>41877.971</td>\n","      <td>50461.645</td>\n","      <td>43812.412</td>\n","      <td>48019.758</td>\n","      <td>54134.984</td>\n","      <td>59820.664</td>\n","      <td>65832.725</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>Korea, Republic of</td>\n","      <td>4864.964</td>\n","      <td>5094.905</td>\n","      <td>3749.123</td>\n","      <td>1960.459</td>\n","      <td>5568.750</td>\n","      <td>10330.767</td>\n","      <td>8014.489</td>\n","      <td>6287.928</td>\n","      <td>7731.010</td>\n","      <td>...</td>\n","      <td>48943.409</td>\n","      <td>30042.972</td>\n","      <td>26176.778</td>\n","      <td>36648.561</td>\n","      <td>17275.878</td>\n","      <td>48018.619</td>\n","      <td>26236.900</td>\n","      <td>50814.306</td>\n","      <td>58852.626</td>\n","      <td>49991.157</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>5 rows Ã— 154 columns</p>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-538ef991-0c30-40cc-bed4-c6fe62bfffde')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-538ef991-0c30-40cc-bed4-c6fe62bfffde button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-538ef991-0c30-40cc-bed4-c6fe62bfffde');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":113}]},{"cell_type":"code","source":["data[data[\"#\"].str.contains(\"Moz\")]"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":171},"id":"3xx1JZVBCNhU","executionInfo":{"status":"ok","timestamp":1664736634686,"user_tz":-390,"elapsed":621,"user":{"displayName":"Phyo Hein","userId":"05488284707558741549"}},"outputId":"d230c684-89ac-464d-ea2f-026c3931a07f"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["             #  2009-11  2009-12  2010-01  2010-02  2010-03  2010-04  2010-05  \\\n","62  Mozambique      0.0      0.0      0.0      0.0      0.0      0.0      0.0   \n","\n","    2010-06  2010-07  ...  2021-10  2021-11  2021-12  2022-01  2022-02  \\\n","62      0.0      0.0  ...  881.691  109.364  682.786   25.526  386.114   \n","\n","    2022-03  2022-04  2022-05  2022-06  2022-07  \n","62  292.288      0.0      0.0      0.0      0.0  \n","\n","[1 rows x 154 columns]"],"text/html":["\n","  <div id=\"df-5fd2d1f9-d5e0-4dd9-b9eb-9fcc1aa7f6a9\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>#</th>\n","      <th>2009-11</th>\n","      <th>2009-12</th>\n","      <th>2010-01</th>\n","      <th>2010-02</th>\n","      <th>2010-03</th>\n","      <th>2010-04</th>\n","      <th>2010-05</th>\n","      <th>2010-06</th>\n","      <th>2010-07</th>\n","      <th>...</th>\n","      <th>2021-10</th>\n","      <th>2021-11</th>\n","      <th>2021-12</th>\n","      <th>2022-01</th>\n","      <th>2022-02</th>\n","      <th>2022-03</th>\n","      <th>2022-04</th>\n","      <th>2022-05</th>\n","      <th>2022-06</th>\n","      <th>2022-07</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>62</th>\n","      <td>Mozambique</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>...</td>\n","      <td>881.691</td>\n","      <td>109.364</td>\n","      <td>682.786</td>\n","      <td>25.526</td>\n","      <td>386.114</td>\n","      <td>292.288</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>1 rows Ã— 154 columns</p>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-5fd2d1f9-d5e0-4dd9-b9eb-9fcc1aa7f6a9')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-5fd2d1f9-d5e0-4dd9-b9eb-9fcc1aa7f6a9 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-5fd2d1f9-d5e0-4dd9-b9eb-9fcc1aa7f6a9');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":115}]},{"cell_type":"code","source":["df = pd.read_excel(\"/content/market_data_file (5).xlsx\", sheet_name = \"world_import_721070_quant\")"],"metadata":{"id":"xS2XqbiaCQhK"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["df1 = df[df[\"#\"].str.contains(\"Egypt\")]"],"metadata":{"id":"qWmd8qixDLSe"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["df1.head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":171},"id":"1AyAu84JDQT7","executionInfo":{"status":"ok","timestamp":1664736908689,"user_tz":-390,"elapsed":359,"user":{"displayName":"Phyo Hein","userId":"05488284707558741549"}},"outputId":"7609099d-8de7-474c-fed9-a1ab20a09b45"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["     Unnamed: 0      #  2009-11  2009-12  2010-01  2010-02  2010-03  2010-04  \\\n","117         117  Egypt  268.145  403.846  599.113  956.521  849.702  841.476   \n","\n","       2010-05  2010-06  ...  2021-10  2021-11  2021-12  2022-01  2022-02  \\\n","117  11727.778  810.928  ...      0.0      0.0      0.0      0.0      0.0   \n","\n","     2022-03  2022-04  2022-05  2022-06  2022-07  \n","117      0.0      0.0      0.0      0.0      0.0  \n","\n","[1 rows x 155 columns]"],"text/html":["\n","  <div id=\"df-01086eb5-80e5-4809-9c30-41e01ae8a224\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Unnamed: 0</th>\n","      <th>#</th>\n","      <th>2009-11</th>\n","      <th>2009-12</th>\n","      <th>2010-01</th>\n","      <th>2010-02</th>\n","      <th>2010-03</th>\n","      <th>2010-04</th>\n","      <th>2010-05</th>\n","      <th>2010-06</th>\n","      <th>...</th>\n","      <th>2021-10</th>\n","      <th>2021-11</th>\n","      <th>2021-12</th>\n","      <th>2022-01</th>\n","      <th>2022-02</th>\n","      <th>2022-03</th>\n","      <th>2022-04</th>\n","      <th>2022-05</th>\n","      <th>2022-06</th>\n","      <th>2022-07</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>117</th>\n","      <td>117</td>\n","      <td>Egypt</td>\n","      <td>268.145</td>\n","      <td>403.846</td>\n","      <td>599.113</td>\n","      <td>956.521</td>\n","      <td>849.702</td>\n","      <td>841.476</td>\n","      <td>11727.778</td>\n","      <td>810.928</td>\n","      <td>...</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>1 rows Ã— 155 columns</p>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-01086eb5-80e5-4809-9c30-41e01ae8a224')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-01086eb5-80e5-4809-9c30-41e01ae8a224 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-01086eb5-80e5-4809-9c30-41e01ae8a224');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":120}]},{"cell_type":"code","source":["df2 = df1.T[2:]\n","df2.columns = [\"values\"]\n","df2[\"values\"] = df2[\"values\"].astype(float).sort_values()"],"metadata":{"id":"aFfmft9zDRj0"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["df2.info()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"FrDGymubDceY","executionInfo":{"status":"ok","timestamp":1664737834776,"user_tz":-390,"elapsed":4,"user":{"displayName":"Phyo Hein","userId":"05488284707558741549"}},"outputId":"35068c85-69dd-4a80-9406-e891f65ec8e0"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["<class 'pandas.core.frame.DataFrame'>\n","Index: 153 entries, 2009-11 to 2022-07\n","Data columns (total 1 columns):\n"," #   Column  Non-Null Count  Dtype  \n","---  ------  --------------  -----  \n"," 0   values  153 non-null    float64\n","dtypes: float64(1)\n","memory usage: 2.4+ KB\n"]}]},{"cell_type":"code","source":["df2[\"changes\"] = df2[\"values\"]/df2[\"values\"].shift(-1)\n","df2 = df2.fillna(0)\n","df2"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":423},"id":"4YWgYIyKDn_m","executionInfo":{"status":"ok","timestamp":1664737836478,"user_tz":-390,"elapsed":8,"user":{"displayName":"Phyo Hein","userId":"05488284707558741549"}},"outputId":"40c4fcb1-b327-4d92-b8cd-575669539c7d"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["          values   changes\n","2009-11  268.145  0.663978\n","2009-12  403.846  0.674073\n","2010-01  599.113  0.626346\n","2010-02  956.521  1.125713\n","2010-03  849.702  1.009776\n","...          ...       ...\n","2022-03    0.000  0.000000\n","2022-04    0.000  0.000000\n","2022-05    0.000  0.000000\n","2022-06    0.000  0.000000\n","2022-07    0.000  0.000000\n","\n","[153 rows x 2 columns]"],"text/html":["\n","  <div id=\"df-6e8faf73-31e9-458d-98c9-4366bd665bc8\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>values</th>\n","      <th>changes</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>2009-11</th>\n","      <td>268.145</td>\n","      <td>0.663978</td>\n","    </tr>\n","    <tr>\n","      <th>2009-12</th>\n","      <td>403.846</td>\n","      <td>0.674073</td>\n","    </tr>\n","    <tr>\n","      <th>2010-01</th>\n","      <td>599.113</td>\n","      <td>0.626346</td>\n","    </tr>\n","    <tr>\n","      <th>2010-02</th>\n","      <td>956.521</td>\n","      <td>1.125713</td>\n","    </tr>\n","    <tr>\n","      <th>2010-03</th>\n","      <td>849.702</td>\n","      <td>1.009776</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>2022-03</th>\n","      <td>0.000</td>\n","      <td>0.000000</td>\n","    </tr>\n","    <tr>\n","      <th>2022-04</th>\n","      <td>0.000</td>\n","      <td>0.000000</td>\n","    </tr>\n","    <tr>\n","      <th>2022-05</th>\n","      <td>0.000</td>\n","      <td>0.000000</td>\n","    </tr>\n","    <tr>\n","      <th>2022-06</th>\n","      <td>0.000</td>\n","      <td>0.000000</td>\n","    </tr>\n","    <tr>\n","      <th>2022-07</th>\n","      <td>0.000</td>\n","      <td>0.000000</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>153 rows Ã— 2 columns</p>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-6e8faf73-31e9-458d-98c9-4366bd665bc8')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-6e8faf73-31e9-458d-98c9-4366bd665bc8 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-6e8faf73-31e9-458d-98c9-4366bd665bc8');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":170}]},{"cell_type":"code","source":["df2[(df2[\"changes\"]>10) & (df2[\"changes\"]!=float('inf'))]"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":112},"id":"Lm4iuANVEG6r","executionInfo":{"status":"ok","timestamp":1664737838963,"user_tz":-390,"elapsed":568,"user":{"displayName":"Phyo Hein","userId":"05488284707558741549"}},"outputId":"a8f550fc-d73f-4d68-e9ee-fa178a683ec6"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["              values      changes\n","2010-05    11727.778    14.462169\n","2012-02  2514850.816  6870.801639"],"text/html":["\n","  <div id=\"df-50d3f559-e8e2-4186-b72a-1f146fbd187b\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>values</th>\n","      <th>changes</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>2010-05</th>\n","      <td>11727.778</td>\n","      <td>14.462169</td>\n","    </tr>\n","    <tr>\n","      <th>2012-02</th>\n","      <td>2514850.816</td>\n","      <td>6870.801639</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-50d3f559-e8e2-4186-b72a-1f146fbd187b')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-50d3f559-e8e2-4186-b72a-1f146fbd187b button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-50d3f559-e8e2-4186-b72a-1f146fbd187b');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":171}]},{"cell_type":"code","source":["df2[df2[\"values\"]>= 2514850]"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":81},"id":"bXwF1WthEIC7","executionInfo":{"status":"ok","timestamp":1664737843487,"user_tz":-390,"elapsed":469,"user":{"displayName":"Phyo Hein","userId":"05488284707558741549"}},"outputId":"9f778b39-b327-4a70-c65b-e3009601f848"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["              values      changes\n","2012-02  2514850.816  6870.801639"],"text/html":["\n","  <div id=\"df-d39974a9-d701-4f81-b459-537b0fcff20d\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>values</th>\n","      <th>changes</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>2012-02</th>\n","      <td>2514850.816</td>\n","      <td>6870.801639</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-d39974a9-d701-4f81-b459-537b0fcff20d')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-d39974a9-d701-4f81-b459-537b0fcff20d button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-d39974a9-d701-4f81-b459-537b0fcff20d');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":172}]},{"cell_type":"code","source":["sorted(df2[\"values\"].values)"],"metadata":{"id":"k3ju_E5rEgfC"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["http://wits.worldbank.org/API/V1/SDMX/V21/datasource/TRN/reporter/840;918/partner/000/product/721070/year/all/datatype/aveestimated?format=JSON"],"metadata":{"id":"1giW7w47VnC5"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["import json\n","JSON.parse_string(\"http://wits.worldbank.org/API/V1/SDMX/V21/datasource/TRN/reporter/840;918/partner/000/product/721070/year/all/datatype/aveestimated?format=JSON\")"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":188},"id":"wREJReX3a4N3","executionInfo":{"status":"error","timestamp":1664743095676,"user_tz":-390,"elapsed":8,"user":{"displayName":"Phyo Hein","userId":"05488284707558741549"}},"outputId":"ef461191-5545-4b77-9a99-0ebef87a73a7"},"execution_count":null,"outputs":[{"output_type":"error","ename":"NameError","evalue":"ignored","traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mNameError\u001b[0m                                 Traceback (most recent call last)","\u001b[0;32m<ipython-input-219-47cf5a32c63e>\u001b[0m in \u001b[0;36m<module>\u001b[0;34m\u001b[0m\n\u001b[1;32m      1\u001b[0m \u001b[0;32mimport\u001b[0m \u001b[0mjson\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m----> 2\u001b[0;31m \u001b[0mJSON\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mparse_string\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m\"http://wits.worldbank.org/API/V1/SDMX/V21/datasource/TRN/reporter/840;918/partner/000/product/721070/year/all/datatype/aveestimated?format=JSON\"\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m","\u001b[0;31mNameError\u001b[0m: name 'JSON' is not defined"]}]},{"cell_type":"code","source":[],"metadata":{"id":"in5VbNLsa7oN"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["#Test2 Automate DataDownload"],"metadata":{"id":"-8LwiSqd2yNG"}},{"cell_type":"code","source":["!pip install selenium\n","!pip install webdriver-manager\n","!apt -get update \n","!apt install chromium-chromedriver \n","!cp /usr/lib/chromium-browser/chromedriver /usr/bin "],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":1000},"id":"fYscymFS207e","executionInfo":{"status":"ok","timestamp":1664901964265,"user_tz":-390,"elapsed":11145,"user":{"displayName":"Phyo Hein","userId":"05488284707558741549"}},"outputId":"865c88b4-5d2b-4fc8-d254-80cb75222d48"},"execution_count":12,"outputs":[{"output_type":"stream","name":"stdout","text":["Looking in indexes: https://pypi.org/simple, https://us-python.pkg.dev/colab-wheels/public/simple/\n","Requirement already satisfied: selenium in /usr/local/lib/python3.7/dist-packages (4.5.0)\n","Requirement already satisfied: trio-websocket~=0.9 in /usr/local/lib/python3.7/dist-packages (from selenium) (0.9.2)\n","Requirement already satisfied: trio~=0.17 in /usr/local/lib/python3.7/dist-packages (from selenium) (0.22.0)\n","Collecting urllib3[socks]~=1.26\n","  Using cached urllib3-1.26.12-py2.py3-none-any.whl (140 kB)\n","Requirement already satisfied: certifi>=2021.10.8 in /usr/local/lib/python3.7/dist-packages (from selenium) (2022.6.15)\n","Requirement already satisfied: sniffio in /usr/local/lib/python3.7/dist-packages (from trio~=0.17->selenium) (1.3.0)\n","Requirement already satisfied: idna in /usr/local/lib/python3.7/dist-packages (from trio~=0.17->selenium) (2.10)\n","Requirement already satisfied: exceptiongroup>=1.0.0rc9 in /usr/local/lib/python3.7/dist-packages (from trio~=0.17->selenium) (1.0.0rc9)\n","Requirement already satisfied: attrs>=19.2.0 in /usr/local/lib/python3.7/dist-packages (from trio~=0.17->selenium) (22.1.0)\n","Requirement already satisfied: async-generator>=1.9 in /usr/local/lib/python3.7/dist-packages (from trio~=0.17->selenium) (1.10)\n","Requirement already satisfied: outcome in /usr/local/lib/python3.7/dist-packages (from trio~=0.17->selenium) (1.2.0)\n","Requirement already satisfied: sortedcontainers in /usr/local/lib/python3.7/dist-packages (from trio~=0.17->selenium) (2.4.0)\n","Requirement already satisfied: wsproto>=0.14 in /usr/local/lib/python3.7/dist-packages (from trio-websocket~=0.9->selenium) (1.2.0)\n","Requirement already satisfied: PySocks!=1.5.7,<2.0,>=1.5.6 in /usr/local/lib/python3.7/dist-packages (from urllib3[socks]~=1.26->selenium) (1.7.1)\n","Requirement already satisfied: h11<1,>=0.9.0 in /usr/local/lib/python3.7/dist-packages (from wsproto>=0.14->trio-websocket~=0.9->selenium) (0.14.0)\n","Requirement already satisfied: typing-extensions in /usr/local/lib/python3.7/dist-packages (from h11<1,>=0.9.0->wsproto>=0.14->trio-websocket~=0.9->selenium) (4.1.1)\n","Installing collected packages: urllib3\n","  Attempting uninstall: urllib3\n","    Found existing installation: urllib3 1.25.11\n","    Uninstalling urllib3-1.25.11:\n","      Successfully uninstalled urllib3-1.25.11\n","\u001b[31mERROR: pip's dependency resolver does not currently take into account all the packages that are installed. This behaviour is the source of the following dependency conflicts.\n","requests 2.23.0 requires urllib3!=1.25.0,!=1.25.1,<1.26,>=1.21.1, but you have urllib3 1.26.12 which is incompatible.\u001b[0m\n","Successfully installed urllib3-1.26.12\n"]},{"output_type":"display_data","data":{"application/vnd.colab-display-data+json":{"pip_warning":{"packages":["urllib3"]}}},"metadata":{}},{"output_type":"stream","name":"stdout","text":["Looking in indexes: https://pypi.org/simple, https://us-python.pkg.dev/colab-wheels/public/simple/\n","Requirement already satisfied: webdriver-manager in /usr/local/lib/python3.7/dist-packages (3.8.3)\n","Requirement already satisfied: tqdm in /usr/local/lib/python3.7/dist-packages (from webdriver-manager) (4.64.1)\n","Requirement already satisfied: requests in /usr/local/lib/python3.7/dist-packages (from webdriver-manager) (2.23.0)\n","Requirement already satisfied: python-dotenv in /usr/local/lib/python3.7/dist-packages (from webdriver-manager) (0.21.0)\n","Collecting urllib3!=1.25.0,!=1.25.1,<1.26,>=1.21.1\n","  Using cached urllib3-1.25.11-py2.py3-none-any.whl (127 kB)\n","Requirement already satisfied: idna<3,>=2.5 in /usr/local/lib/python3.7/dist-packages (from requests->webdriver-manager) (2.10)\n","Requirement already satisfied: chardet<4,>=3.0.2 in /usr/local/lib/python3.7/dist-packages (from requests->webdriver-manager) (3.0.4)\n","Requirement already satisfied: certifi>=2017.4.17 in /usr/local/lib/python3.7/dist-packages (from requests->webdriver-manager) (2022.6.15)\n","Installing collected packages: urllib3\n","  Attempting uninstall: urllib3\n","    Found existing installation: urllib3 1.26.12\n","    Uninstalling urllib3-1.26.12:\n","      Successfully uninstalled urllib3-1.26.12\n","\u001b[31mERROR: pip's dependency resolver does not currently take into account all the packages that are installed. This behaviour is the source of the following dependency conflicts.\n","selenium 4.5.0 requires urllib3[socks]~=1.26, but you have urllib3 1.25.11 which is incompatible.\u001b[0m\n","Successfully installed urllib3-1.25.11\n"]},{"output_type":"display_data","data":{"application/vnd.colab-display-data+json":{"pip_warning":{"packages":["urllib3"]}}},"metadata":{}},{"output_type":"stream","name":"stdout","text":["E: Command line option 'g' [from -get] is not understood in combination with the other options.\n","Reading package lists... Done\n","Building dependency tree       \n","Reading state information... Done\n","chromium-chromedriver is already the newest version (105.0.5195.102-0ubuntu0.18.04.1).\n","The following package was automatically installed and is no longer required:\n","  libnvidia-common-460\n","Use 'apt autoremove' to remove it.\n","0 upgraded, 0 newly installed, 0 to remove and 20 not upgraded.\n","cp: '/usr/lib/chromium-browser/chromedriver' and '/usr/bin/chromedriver' are the same file\n"]}]},{"cell_type":"code","source":["import sys \n","sys.path.insert(0, \"/usr/lib/chromium-browser/chromedriver\")\n","\n","import time \n","from datetime import date\n","from datetime import datetime as dt\n","from datetime import timedelta\n","\n","import numpy as np \n","import pandas as pd \n","import pandas_datareader as dr\n","from selenium import webdriver \n","from selenium.webdriver.chrome.options import Options \n","from selenium.webdriver.chrome.service import Service\n","from selenium.webdriver.common.by import By \n","from selenium.webdriver.support import expected_conditions as EC\n","from selenium.webdriver.support.ui import Select, WebDriverWait \n","from webdriver_manager.chrome import ChromeDriverManager\n","\n","chrome_options = webdriver.ChromeOptions()\n","chrome_options.add_argument('--headless')\n","chrome_options.add_argument('--no-sandbox')\n","chrome_options.add_argument('--disable-dev-shm-usage')\n"],"metadata":{"id":"Nmpefn9i235K","executionInfo":{"status":"ok","timestamp":1664901988631,"user_tz":-390,"elapsed":1223,"user":{"displayName":"Phyo Hein","userId":"05488284707558741549"}}},"execution_count":1,"outputs":[]},{"cell_type":"code","source":["driver = webdriver.Chrome('chromedriver',chrome_options=chrome_options)\n","driver.get(\"https://www.trademap.org/Index.aspx\")"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":1000},"id":"ofXmyrku3RqI","executionInfo":{"status":"error","timestamp":1664902051872,"user_tz":-390,"elapsed":1375,"user":{"displayName":"Phyo Hein","userId":"05488284707558741549"}},"outputId":"c8f9c374-5877-443f-daef-e49c971ed6f8"},"execution_count":3,"outputs":[{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:1: DeprecationWarning: use options instead of chrome_options\n","  \"\"\"Entry point for launching an IPython kernel.\n"]},{"output_type":"error","ename":"WebDriverException","evalue":"ignored","traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mWebDriverException\u001b[0m                        Traceback (most recent call last)","\u001b[0;32m<ipython-input-3-a7b91a7251cf>\u001b[0m in \u001b[0;36m<module>\u001b[0;34m\u001b[0m\n\u001b[1;32m      1\u001b[0m \u001b[0mdriver\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mwebdriver\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mChrome\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m'chromedriver'\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0mchrome_options\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mchrome_options\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m----> 2\u001b[0;31m \u001b[0mdriver\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mget\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m\"https://www.trademap.org/Index.aspx\"\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m","\u001b[0;32m/usr/local/lib/python3.7/dist-packages/selenium/webdriver/remote/webdriver.py\u001b[0m in \u001b[0;36mget\u001b[0;34m(self, url)\u001b[0m\n\u001b[1;32m    439\u001b[0m         \u001b[0mLoads\u001b[0m \u001b[0ma\u001b[0m \u001b[0mweb\u001b[0m \u001b[0mpage\u001b[0m \u001b[0;32min\u001b[0m \u001b[0mthe\u001b[0m \u001b[0mcurrent\u001b[0m \u001b[0mbrowser\u001b[0m \u001b[0msession\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    440\u001b[0m         \"\"\"\n\u001b[0;32m--> 441\u001b[0;31m         \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mexecute\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mCommand\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mGET\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m{\u001b[0m\u001b[0;34m'url'\u001b[0m\u001b[0;34m:\u001b[0m \u001b[0murl\u001b[0m\u001b[0;34m}\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    442\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    443\u001b[0m     \u001b[0;34m@\u001b[0m\u001b[0mproperty\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.7/dist-packages/selenium/webdriver/remote/webdriver.py\u001b[0m in \u001b[0;36mexecute\u001b[0;34m(self, driver_command, params)\u001b[0m\n\u001b[1;32m    427\u001b[0m         \u001b[0mresponse\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mcommand_executor\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mexecute\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mdriver_command\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mparams\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    428\u001b[0m         \u001b[0;32mif\u001b[0m \u001b[0mresponse\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 429\u001b[0;31m             \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0merror_handler\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mcheck_response\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mresponse\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    430\u001b[0m             response['value'] = self._unwrap_value(\n\u001b[1;32m    431\u001b[0m                 response.get('value', None))\n","\u001b[0;32m/usr/local/lib/python3.7/dist-packages/selenium/webdriver/remote/errorhandler.py\u001b[0m in \u001b[0;36mcheck_response\u001b[0;34m(self, response)\u001b[0m\n\u001b[1;32m    241\u001b[0m                 \u001b[0malert_text\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mvalue\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;34m'alert'\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mget\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m'text'\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    242\u001b[0m             \u001b[0;32mraise\u001b[0m \u001b[0mexception_class\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mmessage\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mscreen\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mstacktrace\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0malert_text\u001b[0m\u001b[0;34m)\u001b[0m  \u001b[0;31m# type: ignore[call-arg]  # mypy is not smart enough here\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 243\u001b[0;31m         \u001b[0;32mraise\u001b[0m \u001b[0mexception_class\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mmessage\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mscreen\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mstacktrace\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m","\u001b[0;31mWebDriverException\u001b[0m: Message: unknown error: net::ERR_CONNECTION_RESET\n  (Session info: headless chrome=105.0.5195.102)\nStacktrace:\n#0 0x5577d6d0b1a3 <unknown>\n#1 0x5577d6ad7ac3 <unknown>\n#2 0x5577d6ad4e10 <unknown>\n#3 0x5577d6ac90f5 <unknown>\n#4 0x5577d6aca071 <unknown>\n#5 0x5577d6ac93b6 <unknown>\n#6 0x5577d6ac8875 <unknown>\n#7 0x5577d6ac7749 <unknown>\n#8 0x5577d6ac7a11 <unknown>\n#9 0x5577d6ad9654 <unknown>\n#10 0x5577d6b41a73 <unknown>\n#11 0x5577d6b2d022 <unknown>\n#12 0x5577d6b413cc <unknown>\n#13 0x5577d6b2d443 <unknown>\n#14 0x5577d6b0348b <unknown>\n#15 0x5577d6b04975 <unknown>\n#16 0x5577d6d872a0 <unknown>\n#17 0x5577d6d4281a <unknown>\n#18 0x5577d6d4234a <unknown>\n#19 0x5577d6d42e75 <unknown>\n#20 0x5577d6d8314b <unknown>\n#21 0x5577d6d431de <unknown>\n#22 0x5577d6d24c23 <unknown>\n#23 0x5577d6d4d6b8 <unknown>\n#24 0x5577d6d4d852 <unknown>\n#25 0x5577d6d66b60 <unknown>\n#26 0x7fcbd0b1e6db <unknown>\n"]}]},{"cell_type":"code","source":["driver = webdriver.Chrome('chrome')"],"metadata":{"id":"cykx9QfW5q4f"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["driver.get(\"www.google.com\")"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":171},"id":"K6ZaklvL6P7k","executionInfo":{"status":"error","timestamp":1664902360531,"user_tz":-390,"elapsed":8,"user":{"displayName":"Phyo Hein","userId":"05488284707558741549"}},"outputId":"6ce5b104-8d8e-447c-b91f-4c86457e81be"},"execution_count":13,"outputs":[{"output_type":"error","ename":"AttributeError","evalue":"ignored","traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mAttributeError\u001b[0m                            Traceback (most recent call last)","\u001b[0;32m<ipython-input-13-35a7ae761395>\u001b[0m in \u001b[0;36m<module>\u001b[0;34m\u001b[0m\n\u001b[0;32m----> 1\u001b[0;31m \u001b[0mdriver\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mget\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m\"www.google.com\"\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m","\u001b[0;31mAttributeError\u001b[0m: module 'selenium.webdriver.firefox' has no attribute 'get'"]}]},{"cell_type":"code","source":[],"metadata":{"id":"LRZbSK-_6YAj"},"execution_count":null,"outputs":[]}]}